[{"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\index.js":"1","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\App.js":"2","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\reportWebVitals.js":"3","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Home.js":"4","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\AuthServer.js":"5","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\AutClient.js":"6","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Shop.js":"7","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\combiners.js":"8","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\user.data.js":"9","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\post.data.js":"10","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\actions\\actions.js":"11","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\client.get.data.js":"12","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Produits.js":"13","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\produits.client.js":"14","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\get.id.produit.js":"15"},{"size":938,"mtime":1626467006552,"results":"16","hashOfConfig":"17"},{"size":1228,"mtime":1626372165128,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":801,"mtime":1626371994733,"results":"20","hashOfConfig":"17"},{"size":6558,"mtime":1626390736192,"results":"21","hashOfConfig":"17"},{"size":2699,"mtime":1626465021713,"results":"22","hashOfConfig":"17"},{"size":17564,"mtime":1626391356168,"results":"23","hashOfConfig":"17"},{"size":450,"mtime":1626269485536,"results":"24","hashOfConfig":"17"},{"size":306,"mtime":1625987123367,"results":"25","hashOfConfig":"17"},{"size":241,"mtime":1625943724215,"results":"26","hashOfConfig":"17"},{"size":2414,"mtime":1626372141275,"results":"27","hashOfConfig":"17"},{"size":292,"mtime":1626200036449,"results":"28","hashOfConfig":"17"},{"size":7098,"mtime":1626466672727,"results":"29","hashOfConfig":"17"},{"size":287,"mtime":1626208018981,"results":"30","hashOfConfig":"17"},{"size":279,"mtime":1626269436347,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1scffu4",{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\index.js",["68"],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\App.js",["69","70"],"import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home';\nimport AuthClient from './pages/AutClient'\nimport AuthServer from './pages/AuthServer';\nimport Shop from './pages/Shop';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { getData } from './redux/actions/actions';\nimport Produits from './pages/Produits';\nrequire('dotenv').config()\nfunction App() {\n const dispatch=useDispatch() \nconst [id , setId]=useState()\n  useEffect(async ()=> {\n    await axios({\n      method:\"get\",\n      url: `${process.env.REACT_APP_PORT}/myid`,\n      withCredentials:true,\n    }).then((user)=> \n    {\n      setId(user.data);\n    }).catch((err)=>{\n      console.log(err)\n    })\n    if(id){\n      dispatch(getData(id))\n    }\n  },[id])\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/client\" component={AuthClient} />\n        <Route path=\"/server\" component={AuthServer} />\n        <Route path=\"/shop\" component={Shop} />\n        <Route path=\"/produits\" component={Produits} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["71","72"],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\reportWebVitals.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Home.js",["73"],"import React from 'react'\r\nimport \"../App.css\"\r\nimport homeImage from '../images/home_img.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"home-container\">\r\n            <div className=\"home-container-left\">\r\n                <img className=\"home-image\" src={homeImage} />\r\n            </div>\r\n\r\n            <div className=\"home-container-right\">\r\n                <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                    <NavLink to=\"/server\" className=\"btn btn-primary text-light\" type=\"button\">je suis un coiffeur</NavLink>\r\n                    <NavLink to=\"/client\" className=\"btn btn-outline-primary\" type=\"button\">je veux me coiffer</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\AuthServer.js",["74","75","76","77"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport serImg from \"../images/server_img.png\"\r\nimport axios from \"axios\"\r\nimport {getId} from \"../index\"\r\nimport { useDispatch } from 'react-redux'\r\nrequire('dotenv').config({path: '../../'})\r\nconst Register = ({setAuth}) => {\r\n    \r\n    const [entreprise, setentreprise]=useState(\"\")\r\n    const [username, setusername]=useState(\"\")\r\n    const [password, setpassword]=useState(\"\")\r\n    const [rpassword, setRpassword]=useState(\"\")\r\n    const [email, setemail]=useState(\"\")\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        axios({\r\n            method: \"post\",\r\n            withCredentials:true,\r\n            url: `${process.env.REACT_APP_PORT}/api/register`,\r\n            data: {\r\n                username,\r\n                entreprise,\r\n                password,\r\n                email\r\n            }\r\n        }).then(data => {\r\n            console.log(data)\r\n            setAuth(false)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"server-container\">\r\n            <div className=\"server-container-left container\">\r\n                <img className=\"server-img\" src={serImg} />\r\n            </div>\r\n            <div className=\"server-container-right\">\r\n                <form className=\"container server-form\" onSubmit={handleSubmit}>\r\n                    <h3 className=\"server-h3 mb-3 text-primary\">INSCRIPTION</h3>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nom de votre entreprise</label>\r\n                        <input type=\"text\" className=\"form-control\" required value={entreprise} onChange={(e)=>setentreprise(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Votre Nom</label>\r\n                        <input type=\"text\" className=\"form-control\" required value={username} onChange={(e)=>setusername(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" required value={email} onChange={(e)=>setemail(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" required  value={password} onChange={(e)=>setpassword(e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" required value={rpassword} onChange={(e)=>setRpassword(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n\r\n                        <button className=\"form-control btn-primary text-light\" >S'inscrire</button>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <button className=\"form-control btn-outline-primary \" onClick={()=>setAuth(false)} >Se connecter</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst Login = ({setAuth}) => {\r\n \r\n    const [username, setusername]=useState(\"\")\r\n    const [password, setpassword]=useState(\"\")\r\n\r\n    const [errorUsername, setErrorUsername]= useState()\r\n    const [errorPassword, setErrorPassword]= useState()\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        axios({\r\n            method: 'POST',\r\n            url:`${process.env.REACT_APP_PORT}/api/login`,\r\n            withCredentials:true,\r\n            data: {\r\n                username, password\r\n            }\r\n        }).then((data) => {\r\n            if(data.data===\"username incorrect\"){\r\n                setErrorUsername(\"username inconnu\")\r\n                setErrorPassword(\"\")\r\n            }\r\n            if(data.data===\"password incorrect\"){\r\n\r\n                setErrorUsername(\"\")\r\n                setErrorPassword(\"password incorrect\")\r\n            }\r\n        \r\n            if(data.data._id)\r\n                window.location=\"/shop\"\r\n        }).catch((err) => console.log(err))\r\n    }\r\n    return (\r\n        <div className=\"server-container\">\r\n            <div className=\"server-container-left container\">\r\n                <img className=\"server-img\" src={serImg} />\r\n            </div>\r\n            <div className=\"server-container-right\">\r\n                <form className=\"container server-form\" onSubmit={handleSubmit}>\r\n                    <h3 className=\"server-h3 mb-3 text-primary\">CONNECTION</h3>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Votre nom</label>\r\n                        <input type=\"text\" className=\"form-control\" required value={username} onChange={(e)=>setusername(e.target.value)}/>\r\n                        <div className=\"text-danger\">{errorUsername}</div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" required value={password} onChange={(e)=>setpassword(e.target.value)} />\r\n                        <div className=\"text-danger\">{errorPassword}</div>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n\r\n                        <button className=\"form-control btn-primary text-light\" >Se connecter</button>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n\r\n                        <button className=\"form-control btn-outline-primary \" onClick={()=>setAuth(true)}>S'inscrire</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default function AuthServer() {\r\n    const [aut, setAuth] = useState(true)\r\n    return (\r\n        <div>\r\n            {aut ?\r\n                (<div>\r\n                  \r\n                    <Register setAuth={setAuth}/>\r\n                </div>) :\r\n                (\r\n                <div>\r\n                    <Login setAuth={setAuth}/>   \r\n                </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\AutClient.js",["78","79","80","81","82"],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Shop.js",["83","84","85","86","87","88","89","90"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport \"../App.css\"\r\nimport { getData, getPost, update } from '../redux/actions/actions'\r\nrequire('dotenv').config({path: '../../'})\r\nfunction Render(){\r\n    const [produit, setproduit] = useState()\r\n    const [prix, setPrix] = useState(\"\")\r\n    const [file, setfile] = useState(\"\")\r\n    const [verified, setverified] = useState(\"\");\r\n    const [changePrix, setChangePrix] = useState(\"\")\r\n    const [newPrix, setNewPrix] = useState(\"\")\r\n    const [sendId, setSendId] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n    const selectors = useSelector(state => state)\r\n\r\n    const [renderUpdate, setRenderUpdate] = useState(false)\r\n    ////////////////////////////////settings////////////////////////////////////////////\r\n    const [entreprise, setEntreprise] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [pays, setPays] = useState(\"\")\r\n    const [ville, setVille] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [settings, setSettings] = useState(\"\")\r\n    const [profilFile, setProfilFile] = useState(\"\")\r\n    const updateData = (data) => {\r\n        if (username !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { username: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/username`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setUsername(\"\")\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        if (entreprise !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { entreprise: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/entreprise`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setEntreprise(\"\")\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        if (pays !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { pays: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/pays`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setPays(\"\")\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        if (ville !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { ville: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/ville`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setVille(\"\")\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        if (address !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { address: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/address`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setAddress(\"\")\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n        if (ville !== \"\") {\r\n            axios({\r\n                method: \"patch\",\r\n                withCredentials: true,\r\n                data: { ville: data },\r\n                url: `${process.env.REACT_APP_PORT}/api/update/ville`,\r\n            }).then((user) => {\r\n                setSettings(user.data);\r\n                setVille(\"\")\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    const updateImage = (e) => {\r\n        e.preventDefault();\r\n        const data = new FormData();\r\n        data.append(\"file\", profilFile);\r\n        axios({\r\n            method: \"patch\",\r\n            withCredentials: true,\r\n            data: data,\r\n            url: `${process.env.REACT_APP_PORT}/api/profil`,\r\n        }).then((user) => {\r\n            setSettings(user.data);\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    ///////////////////////// end settings /////////////////////////////////////////////\r\n    ///////////////////////// logout /////////////////////////////\r\n    const logout = () => {\r\n        axios({\r\n            method:\"get\",\r\n            withCredentials: true,\r\n            url:`${process.env.REACT_APP_PORT}/api/logout`,\r\n        }).then((user) => {\r\n            if(user)\r\n            window.location=\"/\"\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    //////////////////////////////////////////////////////////////\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        console.log(file)\r\n        const data = new FormData();\r\n        data.append(\"prix\", prix)\r\n        data.append(\"file\", file)\r\n        await axios({\r\n            method: \"post\",\r\n            withCredentials: true,\r\n            data: data,\r\n            url: `${process.env.REACT_APP_PORT}/api/post`,\r\n        }).then((user) => {\r\n            setproduit(user);\r\n\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n    const removePost = (id) => {\r\n        axios({\r\n            method: 'get',\r\n            url: `${process.env.REACT_APP_PORT}/api/delete/` + id,\r\n            withCredentials: true,\r\n        })\r\n            .then((response) => {\r\n                setverified(response)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    //////////////////////////////////////////////////////////////////\r\n    const handlePrix = (e) => {\r\n        e.preventDefault()\r\n        axios({\r\n            method: 'post',\r\n            data: {\r\n                prix: newPrix\r\n            },\r\n            url: `${process.env.REACT_APP_PORT}/api/new/` + sendId,\r\n            withCredentials: true,\r\n        }).then((user) => {\r\n            setChangePrix(user)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(async () => {\r\n        await dispatch(update(selectors.getUser._id));\r\n    }, [settings])\r\n\r\n    useEffect(async () => {\r\n        await dispatch(getPost(selectors.getUser._id));\r\n    }, [produit, verified, changePrix, settings])\r\n\r\n    const datas = selectors.getPost.map((data, key) =>\r\n        <div key={key} className=\"card\">\r\n            <div className=\"card-header\">\r\n\r\n                <button className=\"edit\" onClick={() => removePost(data._id)}>\r\n                    <i className=\"fas fa-trash-alt\" ></i>\r\n                </button>\r\n\r\n            </div>\r\n            <div className=\"card-body card-body-img\">\r\n                <img src={data.picture} className=\"pr_img\" />\r\n            </div>\r\n            <div className=\"card-footer footer-img\">\r\n                <h6>Prix : {data.prix}</h6>\r\n\r\n            </div>\r\n\r\n            <button className=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasTop\" aria-controls=\"offcanvasTop\" value={sendId} onClick={() => setSendId(data._id)}>Modifier le Prix</button>\r\n\r\n            <div className=\"offcanvas offcanvas-top\" tabindex=\"-1\" id=\"offcanvasTop\" aria-labelledby=\"offcanvasTopLabel\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 id=\"offcanvasTopLabel\">Modifier le Prix</h5>\r\n                    <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <form onSubmit={handlePrix}>\r\n                        <input type=\"number\" className=\"form-control\" value={newPrix} onChange={e => setNewPrix(e.target.value)} /><br></br>\r\n                        <button type=\"submit\" className=\"btn btn-primary form-control\">Modifier</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n    \r\n    \r\n    return (\r\n        <div className=\"shop-container\">\r\n        <div className=\"shop-container-header bg-primary\">\r\n            <div className=\"container flex\">\r\n                <div className=\"\">\r\n                    <h3 className=\"text-light p-2\">{selectors.getUser.entreprise}</h3>\r\n                </div>\r\n                <div className=\"img-profil-body\">\r\n                    <button className=\"edit\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasScrolling\" aria-controls=\"offcanvasScrolling\">\r\n                        {selectors.getUser.picture ? <img src={selectors.getUser.picture} className=\"rounded-circle img-profil\" alt=\"...\" /> :\r\n                            <h2>{selectors.getUser.username && selectors.getUser.username.slice(0,2)}</h2>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"shop-container-body m-4\">\r\n\r\n            <div className=\"\">\r\n                <button className=\"btn btn-outline-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasRight\" aria-controls=\"offcanvasRight\">Ajouter un nouveau produit</button>\r\n\r\n                <div className=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasRight\" aria-labelledby=\"offcanvasRightLabel\">\r\n                    <div className=\"offcanvas-header\">\r\n                        <h5 id=\"offcanvasRightLabel\">Ajouter vos produits</h5>\r\n                        <button type=\"button\" className=\"btn-close  text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className=\"offcanvas-body center\">\r\n                        <div className=\"card\" >\r\n\r\n                            <form className=\"card-body\" onSubmit={handleSubmit}>\r\n                                <label className=\"mb-4\">Ajouter une image</label>\r\n                                <input type=\"file\" className=\"form-control mb-2 text-primary\" onChange={e => setfile(e.target.files[0])} />\r\n                                <label className=\"mt-2 mb-3\">Prix</label>\r\n                                <input type=\"number\" className=\"form-control mb-4\" value={prix} onChange={(e) => setPrix(e.target.value)} />\r\n                                <input type=\"submit\" className=\"form-control btn-primary\" value=\"Valider\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n\r\n                <div className=\"my_card\" >\r\n                    {datas}\r\n                </div>\r\n\r\n                <div className=\"settings\">\r\n                    <div className=\"offcanvas offcanvas-start\" data-bs-scroll=\"true\" data-bs-backdrop=\"false\" tabindex=\"-1\" id=\"offcanvasScrolling\" aria-labelledby=\"offcanvasScrollingLabel\">\r\n                        <div className=\"offcanvas-header\">\r\n                            <img className=\"update-img\" src={selectors.getUser.picture}/>\r\n                            <h5 className=\"offcanvas-title\" id=\"offcanvasScrollingLabel\">Mettre a jour vos données</h5>\r\n                            <button type=\"button\" className=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        {renderUpdate ?\r\n                            <div className=\"offcanvas-body\">\r\n\r\n                                <label>Nom de votre boutique : <span className=\"text-primary\">{selectors.getUser.entreprise}</span> </label>\r\n                                <input type=\"text\" className=\"form-control mb-1\" placeholder=\"Mettre à jour ...\"\r\n                                    value={entreprise} onChange={(e) => setEntreprise(e.target.value)} />\r\n                                <button className=\"btn btn-secondary mb-2\" onClick={() => updateData(entreprise)}>Modifier</button> <br></br>\r\n\r\n                                <label>Nom d'utilisation : <span className=\"text-primary\">{selectors.getUser.username}</span></label>\r\n                                <input type=\"text\" className=\"form-control mb-1\" placeholder=\"Mettre à jour ...\"\r\n                                    value={username} onChange={(e) => setUsername(e.target.value)}\r\n                                />\r\n                                <button className=\"btn btn-secondary mb-2\" onClick={() => updateData(username)}>Modifier</button> <br></br>\r\n\r\n                                <label>Pays : <span className=\"text-primary\">{selectors.getUser.pays}</span></label>\r\n                                <input type=\"text\" className=\"form-control mb-1\" placeholder=\"Mettre à jour ...\"\r\n                                    value={pays} onChange={(e) => setPays(e.target.value)}\r\n                                />\r\n                                <button className=\"btn btn-secondary mb-2\" onClick={() => updateData(pays)}>Modifier</button> <br></br>\r\n\r\n                                <label>ville : <span className=\"text-primary\">{selectors.getUser.ville}</span></label>\r\n                                <input type=\"text\" className=\"form-control mb-1\" placeholder=\"Mettre à jour ...\"\r\n                                    value={ville} onChange={(e) => setVille(e.target.value)}\r\n                                />\r\n                                <button className=\"btn btn-secondary mb-2\" onClick={() => updateData(ville)}>Modifier</button> <br></br>\r\n\r\n                                <label>address : <span className=\"text-primary\">{selectors.getUser.address}</span></label>\r\n                                <input type=\"text\" className=\"form-control mb-1\" placeholder=\"Mettre à jour ...\"\r\n                                    value={address} onChange={(e) => setAddress(e.target.value)}\r\n                                />\r\n                                <button className=\"btn btn-secondary mb-2\" onClick={() => updateData(address)}>Modifier</button> <br></br>\r\n\r\n                                <form onSubmit={updateImage}>\r\n                                    <label>photo profile</label>\r\n                                    <input type=\"file\" className=\"form-control mb-2\" name=\"file\" onChange={(e) => setProfilFile(e.target.files[0])} />\r\n                                    <input type=\"submit\" className=\" btn btn-secondary\" value=\"Modifier\" />\r\n                                </form>\r\n                                <button className=\"btn btn-primary mt-4\" onClick={()=>setRenderUpdate(!renderUpdate)}>Sauvegarder</button>\r\n                            </div> :\r\n                            <div className=\"offcanvas-body\">\r\n                                <ul class=\"list-group\">\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                       Boutique\r\n                                        <span class=\"badge px-4 pt-2 pb-2 bg-primary\">{selectors.getUser.entreprise}</span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        Nom d'utilisation\r\n                                        <span class=\"badge bg-primary px-4 pt-2 pb-2\">{selectors.getUser.username}</span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        Email\r\n                                        <span class=\"badge bg-primary px-4 pt-2 pb-2\">{selectors.getUser.email}</span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        Pays\r\n                                        <span class=\"badge bg-primary px-4 pt-2 pb-2\">{selectors.getUser.pays}</span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        Ville\r\n                                        <span class=\"badge bg-primary px-4 pt-2 pb-2\">{selectors.getUser.ville}</span>\r\n                                    </li>\r\n                                    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        Address\r\n                                        <span class=\"badge bg-primary px-4 pt-2 pb-2\">{selectors.getUser.address}</span>\r\n                                    </li>\r\n                                    <button className=\"btn btn-primary\" onClick={()=>setRenderUpdate(!renderUpdate)}>Mise à jour ...</button>\r\n                                </ul>\r\n                            </div>\r\n\r\n                        }\r\n\r\n                        <div offcanvas-footer>\r\n                            <button className=\"btn btn-default form-control\" onClick={logout}>Deconnexion</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Shop() {\r\n  const selectors= useSelector(state=>state)\r\n\r\n  return (  \r\n      <Render/> \r\n    )\r\n}\r\n","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\combiners.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\user.data.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\post.data.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\actions\\actions.js",["91"],"import axios from \"axios\"\r\nexport const GET_POST = \"get/post/user\"\r\nexport const GET_DATA = \"get/data/user\"\r\nexport const UPDATE_DATA=\"get/update/user\"\r\nexport const GET_DATA_CLIENT = \"get/data/client\"\r\nexport const GET_PRODUCT_CLIENT = \"get/produit/client\"\r\nexport const GET_ID_DATA = \"get/id/data\"\r\nrequire('dotenv').config({path: '../../../'})\r\nexport const getData = (id) => {\r\n  return async (dispatch) => {\r\n    await axios({\r\n      method: \"get\",\r\n      withCredentials: true,\r\n      url:`${process.env.REACT_APP_PORT}/api/` + id,\r\n    }).then(user => {\r\n      dispatch({ type: GET_DATA, payload: user.data })\r\n    }) .catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\nexport const getPost = (id) => {\r\n  return async (dispatch) => {\r\n    axios({\r\n      method: 'get',\r\n      withCredentials: true,\r\n      url: `${process.env.REACT_APP_PORT}/api/get/` + id,\r\n    })\r\n      .then(user => {\r\n        dispatch({ type: GET_POST, payload: user.data })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const update= (id) => {\r\n  return async dispatch => {\r\n    await axios({\r\n      method: \"get\",\r\n      withCredentials: true,\r\n      url: `${process.env.REACT_APP_PORT}/api/update/`+id,\r\n    }).then(user => {\r\n      dispatch({type: UPDATE_DATA, payload: user.data})\r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getDataClient=()=>{\r\n  return async dispatch => {\r\n    await axios({\r\n      method: \"get\",\r\n      withCredentials: true,\r\n      url: `${process.env.REACT_APP_PORT}/api/alluser`,\r\n    }).then(user => {\r\n      dispatch({type: GET_DATA_CLIENT, payload: user.data})\r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const getProduitsForClient=() => {\r\n  return dispatch => {\r\n    axios({ \r\n      method:\"get\",\r\n      url: `${process.env.REACT_APP_PORT}/api/produitclient`,\r\n      withCredentials: true,\r\n    }).then((user) => {\r\n      dispatch({type:GET_PRODUCT_CLIENT , payload:user.data})\r\n    }).catch((err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n\r\nexport const getId = ()=>{\r\n  return dispatch =>{\r\n    axios({\r\n      method:\"get\",\r\n      withCredentials: true,\r\n      url:`${process.env.REACT_APP_PORT}/api/one`,\r\n    })\r\n    .then((user)=>{\r\n      dispatch({type:GET_ID_DATA, payload: user.data})\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n}","C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\client.get.data.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\pages\\Produits.js",["92","93","94","95","96","97","98"],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\produits.client.js",[],"C:\\Users\\MBAIORBE II\\Desktop\\projet japhet\\client\\src\\redux\\recuders\\get.id.produit.js",[],{"ruleId":"99","severity":1,"message":"100","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":16,"column":13,"nodeType":"105","endLine":30,"endColumn":4},{"ruleId":"103","severity":1,"message":"106","line":30,"column":5,"nodeType":"107","endLine":30,"endColumn":9,"suggestions":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":17,"nodeType":"115","endLine":10,"endColumn":63},{"ruleId":"99","severity":1,"message":"116","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":14},{"ruleId":"99","severity":1,"message":"117","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":35,"column":17,"nodeType":"115","endLine":35,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":107,"column":17,"nodeType":"115","endLine":107,"endColumn":60},{"ruleId":"99","severity":1,"message":"118","line":2,"column":28,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":13,"column":17,"nodeType":"115","endLine":13,"endColumn":61},{"ruleId":"121","severity":1,"message":"122","line":39,"column":39,"nodeType":"105","messageId":"123","endLine":39,"endColumn":41},{"ruleId":"103","severity":1,"message":"104","line":75,"column":15,"nodeType":"105","endLine":77,"endColumn":6},{"ruleId":"103","severity":1,"message":"106","line":77,"column":8,"nodeType":"107","endLine":77,"endColumn":10,"suggestions":"124"},{"ruleId":"99","severity":1,"message":"125","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":192,"column":15,"nodeType":"105","endLine":194,"endColumn":6},{"ruleId":"103","severity":1,"message":"126","line":194,"column":8,"nodeType":"107","endLine":194,"endColumn":18,"suggestions":"127"},{"ruleId":"103","severity":1,"message":"104","line":196,"column":15,"nodeType":"105","endLine":198,"endColumn":6},{"ruleId":"103","severity":1,"message":"126","line":198,"column":8,"nodeType":"107","endLine":198,"endColumn":49,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"114","line":210,"column":17,"nodeType":"115","endLine":210,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":285,"column":29,"nodeType":"115","endLine":285,"endColumn":90},{"ruleId":"99","severity":1,"message":"129","line":378,"column":9,"nodeType":"101","messageId":"102","endLine":378,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":11,"column":11,"nodeType":"132","messageId":"133","endLine":17,"endColumn":14,"fix":"134"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":17,"nodeType":"115","endLine":10,"endColumn":61},{"ruleId":"103","severity":1,"message":"106","line":43,"column":8,"nodeType":"107","endLine":43,"endColumn":13,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"122","line":64,"column":51,"nodeType":"105","messageId":"123","endLine":64,"endColumn":53},{"ruleId":"113","severity":1,"message":"114","line":72,"column":25,"nodeType":"115","endLine":72,"endColumn":70},{"ruleId":"113","severity":1,"message":"114","line":89,"column":33,"nodeType":"115","endLine":89,"endColumn":117},{"ruleId":"103","severity":1,"message":"104","line":150,"column":15,"nodeType":"105","endLine":152,"endColumn":6},{"ruleId":"103","severity":1,"message":"106","line":152,"column":8,"nodeType":"107","endLine":152,"endColumn":10,"suggestions":"136"},"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getId' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["140"],"'getData' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'selectors.getUser._id'. Either include them or remove the dependency array.",["141"],["142"],"'selectors' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"143","text":"144"},["145"],["146"],{"desc":"147","fix":"148"},"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},[624,626],".",{"desc":"155","fix":"156"},{"desc":"149","fix":"157"},"Update the dependencies array to be: [dispatch, id]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch]",{"range":"160","text":"161"},"Update the dependencies array to be: [dispatch, selectors.getUser._id, settings]",{"range":"162","text":"163"},"Update the dependencies array to be: [produit, verified, changePrix, settings, dispatch, selectors.getUser._id]",{"range":"164","text":"165"},"Update the dependencies array to be: [dispatch, key]",{"range":"166","text":"167"},{"range":"168","text":"161"},[844,848],"[dispatch, id]",[2592,2594],"[dispatch]",[6387,6397],"[dispatch, selectors.getUser._id, settings]",[6495,6536],"[produit, verified, changePrix, settings, dispatch, selectors.getUser._id]",[1486,1491],"[dispatch, key]",[6983,6985]]